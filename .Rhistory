setwd("~/UCF/UCF Fall '19/Data Visualization/R/A5")
install.packages('GGally')
library(GGally)
library(GGally)
data("iris")
ggpairs(iris, columns=1:4, title = "", axisLabels = "show", columnLabels = colnames(iris[, 1:4]))
View(iris)
income <- read.csv("income_per_person_gdppercapita_ppp_inflation_adjusted.csv")
life_exp <- read.csv("life_expectancy_years.csv")
birth_rate <- read.csv("crude_birth_rate_births_per_1000_population.csv")
marriage <- read.csv("age_at_1st_marriage_women.csv")
agriculture <- read.csv("agricultural_land_percent_of_land_area.csv")
View(income)
select(income, country == 'United States')
filter(income, country == 'United States')
filter(income, income$country == 'United States')
select(income, income$country == 'United States')
library(tidyverse)
select(income, country == 'United States')
select(income, income$country == 'United States')
filter(income, income$country == 'United States')
income <- filter(income, income$country == 'United States')
birth_rate <- filter(birth_rate, country == 'United States')
View(birth_rate)
agriculture <- filter(agriculture, country == 'United States')
life_exp <- filter(life_exp, country == 'United States')
marriage <- filter(marriage, country == 'United States')
t(income)
income <- t(income)
life_exp <- t(life_exp)
birth_rate <- t(birth_rate)
marriage <- t(marriage)
agriculture <- t(agriculture)
View(income)
left_join(income, life_exp, by = country)
rownames_to_column(income)
rownames_to_column(data.frame(income))
income <- rownames_to_column(data.frame(income))
life_exp <- rownames_to_column(data.frame(life_exp))
birth_rate <- rownames_to_column(data.frame(birth_rate))
marriage <- rownames_to_column(data.frame(marriage))
agriculture <- rownames_to_column(data.frame(agriculture))
View(income)
colnames(income[-1,]) <- c('country', 'United States')
View(income)
colnames(income[-1,]) <- c('country', 'United States')
View(income)
colnames(income) <- c('country', 'United States')
View(income)
colnames(life_exp) <- c('country', 'United States')
colnames(birth_rate) <- c('country', 'United States')
colnames(marriage) <- c('country', 'United States')
colnames(agriculture) <- c('country', 'United States')
income[-1,]
View(birth_rate)
View(life_exp)
View(marriage)
View(agriculture)
income <- income[-1,]
life_exp <- life_exp[-1,]
birth_rate <- birth_rate[-1,]
marriage <- marriage[-1,]
agriculture <- agriculture[-1,]
View(marriage)
income <- type.convert(income)
life_exp <- type.convert(life_exp)
birth_rate <- type.convert(birth_rate)
birth_rate <- type.convert(marriage)
View(birth_rate)
birth_rate <- read.csv("crude_birth_rate_births_per_1000_population.csv")
birth_rate <- filter(birth_rate, country == 'United States')
birth_rate <- t(birth_rate)
birth_rate <- rownames_to_column(data.frame(birth_rate))
colnames(birth_rate) <- c('country', 'United States')
View(birth_rate)
birth_rate <- birth_rate[-1,]
birth_rate <- type.convert(birth_rate)
View(birth_rate)
marriage <- type.convert(marriage)
agriculture <- type.convert(agriculture)
View(agriculture)
View(birth_rate)
View(life_exp)
View(marriage)
left_join(income, life_exp, by="country")
left_join(income, life_exp, birth_rate, by="country")
all <- left_join(income, life_exp, by="country", suffix = c('.income', '.life_exp'))
View(all)
all <- left_join(all, birth_rate, by="country", suffix = c('.birth_rate'))
all <- left_join(all, birth_rate, by="country", suffix = c('.all', '.birth_rate'))
View(all)
all <- left_join(all, marriage, by="country", suffix = c('.all', '.marriage'))
View(all)
all <- left_join(all, agriculture, by="country", suffix = c('.all', '.agriculture'))
View(all)
colnames(all) <- c('Years', 'Income', 'Life.expectancy', 'Birth.rate', 'Marriage', 'Agriculture')
ggpairs(all, columns=2:6, title = "", axisLabels = "show", columnLabels = colnames(all[, 2:6]))
ggpairs(all, columns=2:6, title = "", axisLabels = "show", columnLabels = colnames(all[, 2:6])) + geom_smooth(method = "loess", col = "red"))
ggpairs(all, columns=2:6, title = "", axisLabels = "show", columnLabels = colnames(all[, 2:6])) + geom_smooth(method = "loess", col = "red")
ggpairs(all, columns=2:6, title = "", axisLabels = "show", columnLabels = colnames(all[, 2:6])) + geom_smooth(method = "loess", col = "red")
ggpairs(all, columns=2:6, title = "Income vs Life Expectancy, Birth Rate, Marriage, Agriculture correlations", axisLabels = "show", columnLabels = colnames(all[, 2:6]))
library(ggplot2)
ggplot(all, aes(x = income, y = Life.expectancy)) +
geom_point() +
geom_smooth(method = "loess", col = "red"))
ggplot(all, aes(x = income, y = Life.expectancy)) +
geom_point() +
geom_smooth(method = "loess", col = "red")
ggplot(all, aes(x = income, y = 'Life.expectancy')) +
geom_point() +
geom_smooth(method = "loess", col = "red"))
ggplot(all, aes(x = income, y = 'Life.expectancy')) +
geom_point() +
geom_smooth(method = "loess", col = "red")
ggplot(all, aes(x = income, y = income)) +
geom_point() +
geom_smooth(method = "loess", col = "red")
ggplot(all, aes(x = income, y = income)) +
geom_point()
ggplot(all, aes(x = income, y = Life.Expectancy)) + geom_point()
ggplot(all, aes(x = income, y = 'Life.Expectancy')) + geom_point()
ggplot(all, aes(x = income, y = Birth.rate)) + geom_point()
ggpairs(all, columns=2:6, title = "", axisLabels = "show", columnLabels = colnames(all[, 2:6])) + geom_smooth(method = "loess", col = "red"))
ggpairs(all, columns=2:6, title = "", axisLabels = "show", columnLabels = colnames(all[, 2:6])) + geom_smooth(method = "loess", col = "red")
ggplot(drop_na(all), aes(x = income, y = Birth.rate)) + geom_point()
ggplot(all, aes(x = income, y = Birth.rate)) + geom_line()
ggplot(all, aes(x = income, y = Birth.rate)) + geom_line(na.rm = TRUE)
all[, 191:206]
gather(all)
all[191:206, ]
ggplot(all, aes(x = income, y = Birth.rate)) + geom_point()
ggplot(all[:219,], aes(x = income, y = Birth.rate)) + geom_point()
all[:219, ] %>% ggplot(aes(x = income, y = Birth.rate)) + geom_point()
all[1:219, ] %>% ggplot(aes(x = income, y = Birth.rate)) + geom_point()
ggplot(iris, aes(x = Petal.Width, y = Sepal.Length)) +
geom_point() +
geom_smooth(method = "loess", col = "red")
df_1 <- all[1:219, ]
View(df_1)
ggplot(df_1, aes(x = income, y = Life.expectancy)) + geom_point()
ggplot(df_1, aes(x = income, y = 'Life.expectancy')) + geom_point()
ggplot(df_1, aes(x = income, y = df_1$Life.expectancy)) + geom_point()
ggplot(df_1) + geom_point(aes(x = income, y = df_1$Life.expectancy))
library(car)
scatterplot.matrix(~mpg+disp+drat+wt|cyl, data=mtcars,
main="Three Cylinder Options")
install.packages("lattice")
install.packages("lattice")
library(lattice)
scatterplot.matrix(~mpg+disp+drat+wt|cyl, data=mtcars,
+                    main="Three Cylinder Options")
scatterplot.matrix(~mpg+disp+drat+wt|cyl, data=mtcars)
View(all)
ggplot(df_1, aes(x = income, y = df_1$Life.expectancy)) + geom_point()
library(ggplot2)
ggplot(df_1, aes(x = income, y = df_1$Life.expectancy)) + geom_point()
ggplot(df_1, aes(x = income, y = df_1$Life.expectancy)) + geom_point()
ggplot(df_1, aes(x = income, y = df_1$Life.expectancy)) + geom_line()
ggpairs(all, columns=2:6, title = "", axisLabels = "show", columnLabels = colnames(all[, 2:6]))
ggplot(df_1, aes(x = income, y = df_1$Life.expectancy)) + geom_point()
ggplot(df_1, aes(x = income, y = Life.expectancy)) + geom_point()
length(df_1)
length(df_1$Income)
length(df_1$Life.expectancy)
ggplot(df_1, aes(x = Income, y = Life.expectancy)) + geom_point()
ggplot(df_1, aes(x = Income, y = Life.expectancy)) + geom_point() + geom_smooth(method = "loess", col = "red"))
ggplot(df_1, aes(x = Income, y = Life.expectancy)) + geom_point() + geom_smooth(method = "loess", col = "red")
ggplot(df_1, aes(x = Life.expectancy, y = Income)) + geom_point() + geom_smooth(method = "loess", col = "red")
ggplot(df_1, aes(x = Income, y = Life.expectancy)) + geom_point() + geom_smooth(method = "loess", col = "red")
ggplot(df_1, aes(x = Income, y = Life.expectancy)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Life expectancy')
ggplot(df_1, aes(x = Income, y = Birth.rate)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Life expectancy')
ggplot(all, aes(x = Income, y = Life.expectancy)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Life expectancy')
ggplot(all, aes(x = Income, y = Birth.rate)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Life expectancy')
ggplot(all, aes(x = Income, y = Birth.rate)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Birth rate')
ggplot(all, aes(x = Income, y = Birth.rate)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Life expectancy')
ggplot(all, aes(x = Income, y = Life.expectancy)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Life expectancy')
ggplot(all, aes(x = Birth.rate, y = Life.expectancy)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Life expectancy')
library(GGally)
ggpairs(all, columns=2:6, title = "", axisLabels = "show", columnLabels = colnames(all[, 2:6])) + geom_smooth(method = "loess", col = "red")
ggplot(all, aes(x = Income, y = Agriculture)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Agriculture')
ggplot(all, aes(x = Income, y = Marriage)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Marriage')
all %>% ggplot() + geom_point(aes(x = Income, y = Agriculture)) + geom_smooth(method = "loess", col = "red")
library(tidyverse)
all %>% ggplot() + geom_point(aes(x = Income, y = Agriculture)) + geom_smooth(method = "loess", col = "red")
all %>% ggplot(aes(x = Income, y = Agriculture)) + geom_point() + geom_smooth(method = "loess", col = "red")
all %>% ggplot(aes(x = Income, y = Agriculture)) + geom_point() + geom_smooth(method = "loess", col = "red") + facet_grid()
all %>% ggplot(aes(x = Income, y = Agriculture)) + ggplot(aes(x = Income, y = Marriage)) + geom_point() + geom_smooth(method = "loess", col = "red") + facet_grid()
all %>% ggplot(aes(x = Income, y = Agriculture + Marriage)) + geom_point() + geom_smooth(method = "loess", col = "red") + facet_grid()
IM <- ggplot(all, aes(x = Income, y = Marriage)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Marriage')
IA <- ggplot(all, aes(x = Income, y = Agriculture)) + geom_point() + geom_smooth(method = "loess", col = "red") + ggtitle('Loess for Income and Agriculture')
facet_grid(IA, IM)
rm(IA)
rm(IM)
rm(df_1)
